package in.adcast.model;
// Generated 11 Sep, 2017 3:08:17 PM by Hibernate Tools 4.3.5.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Role generated by hbm2java
 */
@Entity
@Table(name = "role", catalog = "sme_development")
public class Role implements java.io.Serializable {

	private Integer id;
	private String role;
	private String type;
	private Set<ApplicationUser> applicationUsers = new HashSet<ApplicationUser>(0);
	private Set<AccessRights> accessRightses = new HashSet<AccessRights>(0);

	public Role() {
	}

	public Role(String role) {
		this.role = role;
	}

	public Role(String role, String type, Set<ApplicationUser> applicationUsers, Set<AccessRights> accessRightses) {
		this.role = role;
		this.type = type;
		this.applicationUsers = applicationUsers;
		this.accessRightses = accessRightses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "role", nullable = false, length = 45)
	public String getRole() {
		return this.role;
	}

	public void setRole(String role) {
		this.role = role;
	}

	@Column(name = "type", length = 45)
	public String getType() {
		return this.type;
	}

	public void setType(String type) {
		this.type = type;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "user_has_role", catalog = "sme_development", joinColumns = {
			@JoinColumn(name = "role_id", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "user_id", nullable = false, updatable = false) })
	public Set<ApplicationUser> getApplicationUsers() {
		return this.applicationUsers;
	}

	public void setApplicationUsers(Set<ApplicationUser> applicationUsers) {
		this.applicationUsers = applicationUsers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "role")
	public Set<AccessRights> getAccessRightses() {
		return this.accessRightses;
	}

	public void setAccessRightses(Set<AccessRights> accessRightses) {
		this.accessRightses = accessRightses;
	}

}
